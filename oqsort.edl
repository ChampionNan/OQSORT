enclave {
  from "openenclave/edl/syscall.edl" import *;
  from "openenclave/edl/logging.edl" import *;
  from "openenclave/edl/sgx/platform.edl" import *;

  trusted {
    public void callSort(
      [in, out, count=1]int *resId,
      [in, out, count=1]int *resN,
      [user_check]int *address,
      [in, count=11]double *params);
  };

  untrusted {
    void OcallSample(
      int inStructureId, 
      int sampleId,
      int64_t N, 
      int64_t M, 
      int64_t n_prime,
      int SSD,
      [in, out, count=1]int64_t *ret);
    void OcallRB(
      size_t index,
      [out, size=blockSize]int* buffer,
      size_t blockSize,
      int structureId,
      int SSD);
    void OcallWB(
      size_t index,
      [in, size=blockSize]int* buffer,
      size_t blockSize,
      int structureId,
      int SSD);
    void ocall_print_string([in, string] const char *str);
    void freeAllocate(int structureIdM, int structureIdF, size_t size, int SSD);
    void fyShuffle(int structureId, size_t size, int B);
  };
};